package helper

import (
	"encoding/json"
	"fmt"
	"io/ioutil"
	"time"
)

var html = `<!DOCTYPE html>
<html lang="en">
<head>
	<meta charset="UTF-8">
	<meta name="viewport" content="width=device-width, initial-scale=1.0">
	<title>%v</title>
	<link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/css/bootstrap.min.css">
	<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/apexcharts/3.18.1/apexcharts.min.css">
</head>
<body>
	<div class="container">
		<br>
		<div style="text-align: center;">
			<h1>%v</h1>
		</div>
		<br>
		<div class="row">
			<div class="col-md-8 col">
				<div id="stats"></div>
			</div>
			<div class="col-md-4">
				<h4>Success Percentile</h4>
				<div id="status"></div>
			</div>
		</div>
	</div>

	<br>

	<div style="text-align: center;">
		Generated By Goping %v
	</div>

	<script src="https://cdnjs.cloudflare.com/ajax/libs/apexcharts/3.18.1/apexcharts.min.js"></script>
	<script>
		var options = {
			tooltip: {
				x: {
					show: true,
					formatter: function(series, seriesIndex, dataPointIndex, w) {
						return "Seq " + series
					}
				},
				y: {
					show: true,
					formatter: function(series, seriesIndex, dataPointIndex, w) {
						return series + "ms"
					}
				}
			},
			series: [{
				name: "RTT",
				data: %v,
			}],
			chart: {
				type: 'line',
				height: 350
			},
			stroke: {
				curve: 'stepline',
			},
			dataLabels: {
				enabled: true,
				formatter: function (val, opts) {
					if (val < 0) {
						return "fail"
					}
					return val + "ms"
				},
			},
			title: {
				text: 'Success Statistic',
				align: 'left'
			},
			markers: {
				hover: {
					sizeOffset: 4
				}
			}
		};

		var chart = new ApexCharts(document.querySelector("#stats"), options);
		chart.render();

		var options = {
			series: %v,
			labels: ["Success", "Failed"],
			colors: ["#1FE199", "#FE4962"],
			chart: {
				type: 'donut',
			},
			responsive: [{
				breakpoint: 480,
				options: {
					chart: {
						width: 200
					},
					legend: {
						position: 'bottom'
					}
				}
			}]
		};

		var chart = new ApexCharts(document.querySelector("#status"), options);
		chart.render();
	</script>
</body>
</html>`

// GenHTML Generate HTML Chart
func GenHTML(target string, succeedRTT []int64, sec int, startAt time.Time) (string, error) {
	title := target + " PING STATISTIC"
	generatedAt := time.Now().Format(time.RFC3339)

	ms := make([]int64, 0)
	for _, v := range succeedRTT {
		ms = append(ms, v/1000)
	}
	rrtJSON, _ := json.Marshal(ms)

	failedReq := sec - len(succeedRTT)
	status := fmt.Sprintf("[%v, %v]", len(succeedRTT), failedReq)

	formatted := fmt.Sprintf(html, title, title, generatedAt, string(rrtJSON), status)

	dt := fmt.Sprintf("%v-%v-%v-%v-%v", startAt.Year(),
		startAt.Month(), startAt.Day(),
		startAt.Hour(), startAt.Minute())
	filename := fmt.Sprintf("./ping-%v-at-%v.html", target, dt)
	err := ioutil.WriteFile(filename, []byte(formatted), 0644)
	return filename, err
}
